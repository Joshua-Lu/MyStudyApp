plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    // dependencies中使用kapt用到
    id 'kotlin-kapt'
    // hilt插件
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion Versions.compile_sdk_version
    buildToolsVersion Versions.build_tools_version

    defaultConfig {
        applicationId "com.lhf.jetpack"
        minSdkVersion Versions.min_sdk_version
        targetSdkVersion Versions.compile_sdk_version
        versionCode Versions.version_code
        versionName Versions.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Versions.compose_ui_version
        kotlinCompilerVersion Versions.kotlin_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    viewBinding {
        enabled = true
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }
}

dependencies {

    implementation Libs.core_ktx
    implementation Libs.appcompat
    implementation Libs.material
    implementation Libs.constraintlayout

    // Room
    implementation Libs.room_runtime
    kapt Libs.room_compiler

    // 协程
    implementation Libs.kotlinx_coroutines_core
    implementation Libs.kotlinx_coroutines_android

    // 包含协程lifecycleScope
    implementation Libs.lifecycle_runtime_ktx
    // 包含协程viewModelScope
    implementation Libs.lifecycle_viewmodel_ktx

    //Dagger - Hilt
    implementation Libs.hilt_android
    kapt Libs.hilt_android_compiler

    // Android - Hilt
    implementation Libs.hilt_lifecycle_viewmodel
    kapt Libs.hilt_compiler

    // 可以使用 by viewModels 创建ViewModel对象
    implementation Libs.activity_ktx

    // okhttp
    implementation Libs.okhttp
    // retrofit
    implementation Libs.retrofit
    // 支持使用GsonConverterFactory，返回Json对象
    implementation Libs.retrofit_converter_gson

    // paging3
    implementation Libs.paging_runtime
    implementation Libs.paging_common

    // Compose
    implementation Libs.activity_compose
    implementation Libs.compose_ui
    implementation Libs.compose_ui_tooling_preview
    implementation Libs.compose_material
    androidTestImplementation Libs.compose_ui_test_junit
    debugImplementation Libs.compose_ui_tooling
    debugImplementation Libs.compose_ui_test_manifest

    testImplementation Libs.junit
    androidTestImplementation Libs.test_junit
    androidTestImplementation Libs.test_espresso_core

    implementation Libs.arouter_api
    implementation Libs.arouter_compiler
}